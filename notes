for coreneuron

mkdir coredat
mkdir modcore
cp mod/*.mod modcore
rm modcore/ri.mod

coreneuron nrniv/main1.cpp needs
nrn_finitialize( 0, input_params.voltage );

several changes to nrntraub can be reverted when global variables
are properly handled. ie. secondorder, v_init, cad.mod:ceiling

build coreneuron using (viz cluster for gpu) (note -DADDITIONAL_MECHPATH
and -DADDITIONAL_MECHS) Basic for  normal machine is
cmake .. -DCMAKE_INSTALL_PREFIX=$HOME/bb/install -DENABLE_OPENACC=OFF

cmake .. -DADDITIONAL_MECHPATH=/gpfs/bbp.cscs.ch/home/hines/models/nrntraub/modcore  -DCMAKE_INSTALL_PREFIX=/gpfs/bbp.cscs.ch/home/hines/bbgpu/install_viz   -DCMAKE_C_FLAGS:STRING="-I/gpfs/bbp.cscs.ch/apps/viz/tools/pgi/15.10/linux86-64/2015/include -acc -Minfo=acc -Minline=size:200,levels:10  -O3 -DSWAP_ENDIAN_DISABLE_ASM -DLAYOUT=0 -DDISABLE_HOC_EXP -DADDITIONAL_MECHS" -DCMAKE_CXX_FLAGS:STRING="-I/gpfs/bbp.cscs.ch/apps/viz/tools/pgi/15.10/linux86-64/2015/include -acc -Minfo=acc -Minline=size:200,levels:10 -O3 -DSWAP_ENDIAN_DISABLE_ASM -DLAYOUT=0 -DDISABLE_HOC_EXP -DADDITIONAL_MECHS" -DCOMPILE_LIBRARY_TYPE=STATIC

nrnivmodl mod
nrniv -c mytstop=100 temp.hoc

mpirun -n 1 coreneuron_exec -mpi -d coredat --gpu -e 100 --voltage=1000 --cell_permute=2 --nwarp=10
#mpirun is needed to get solve time

sh compare.sh out1.dat out0.dat|more
